{
    "beforeSaveApiScript": "//before insert\nif (entity\\isNew()) {\n    $emailTemplateId = '663767067ebd336ed';\n    $phone = string\\concatenate('+', phone);\n    $bunchId = util\\generateId();//link bunch and tickets by this id\n    $bookedStart = datetime\\now();\n    $bookedEnd = datetime\\addHours(datetime\\now(), record\\attribute('Event', eventId, 'bookingTime'));\n    \n    if (array\\length(indexes) > 3) {\n        recordService\\throwBadRequest('Максимум 3 квитки');\n    }\n    \n    // ---------------- Create or get client -----------------------------------------\n    $clientId = record\\findOne('Contact', 'createdAt', 'desc', 'phoneNumber=', $phone);\n    if (!$clientId) {\n        $clientId = record\\create('Contact',\n            'firstName', firstName,\n            'lastName', lastName,\n            'emailAddress', email,\n            'phoneNumber', $phone,\n            'assignedUserId', env\\userAttribute('id'),\n            'teamsIds', env\\userAttribute('teamsIds'),\n        );\n    }\n    //--------------------------------------------------------------------------------\n    \n    //--------------------------------------------------------------------------------\n    $map = record\\attribute('Event', eventId, 'map');\n    if (!$map) {\n        recordService\\throwBadRequest('Мапа не налаштована');\n    }\n    \n    //remove skipers and spaces\n    $map = string\\replace($map, ' ', '');  //remove spaces\n    $map = string\\replace($map, '=\\n', '');//remove row skiper\n    $map = string\\replace($map, '_', '');  //remove seat skiper\n    //-------------------------------------------------------------------------------\n    \n    // CHECK LIMIT !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!\n    \n    //---------------- Create tickets ----------------------------\n    $totalPrice = 0;\n    $ticketsIds = list();\n    formatedPlaces = '';\n    $i = 0;\n    while($i < array\\length(indexes),\n        (\n            $indexesVal = array\\at(indexes, $i);\n            $row = array\\at(string\\split($indexesVal, ' '), 0);\n            $seat = array\\at(string\\split($indexesVal, ' '), 1);\n            \n            if (record\\exists('Ticket', \n                'row=', $row, \n                'seat=', $seat, \n                'status!=', 'notPaid',\n                'eventId=', eventId)) {\n                    recordService\\throwDuplicateConflict('Це місце вже зайняли');\n            }\n            \n            //get template from map\n            $mapAsArr = string\\split($map, '\\n');\n            $mapRow = array\\at($mapAsArr, $row - 1);\n            $mapSeat = string\\substring($mapRow, $seat - 1, 1);\n            \n            if (!$mapSeat) {\n                recordService\\throwBadRequest('Місце не знайдено');\n            }\n            \n            //get ticketType\n            $ticketTypeId = record\\findOne('TicketType', 'createdAt', 'desc', 'eventId=', eventId, 'nameOnMap=', $mapSeat);\n            if (!$ticketTypeId) {\n                recordService\\throwBadRequest('Шаблон не знайдено');\n            }\n            \n            //set full place name\n            $indexer = record\\attribute('Event', eventId, 'indexer');\n            $place = string\\concatenate('Ряд: ', $row, ' Місце: ', $seat); //by default\n            $j = 0;\n            $index = string\\concatenate($row,  ' ', $seat);\n            while($j < array\\length($indexer),\n                (\n                    $indexerVal = array\\at($indexer, $j);\n                    $indexPart = array\\at(string\\split($indexerVal, '-'), 0);\n                    \n                    if ($index == $indexPart) {\n                        $placeNameArr = array\\at(string\\split($indexerVal, '-'), 1);\n                        $placeName = array\\at(string\\split($placeNameArr, ','), 0);\n                        $placeNumber = array\\at(string\\split($placeNameArr, ','), 1);\n                        \n                        $place = string\\concatenate($placeName, ', Місце', $placeNumber);\n                    }\n                    $j = $j + 1;\n                )\n            );\n            \n            $price = record\\attribute('TicketType', $ticketTypeId, 'price');\n            $ticketId = record\\create('Ticket',\n                'eventId', eventId,\n                'contactId', $clientId,\n                'ticketTypeId', $ticketTypeId,\n                'row', $row,\n                'seat', $seat,\n                'place', $place,\n                'name', $place,\n                'phone', phone,\n                'email', email,\n                'bookedStart', $bookedStart,\n                'bookedEnd', $bookedEnd,\n                'price', $price,\n                'assignedUserId', env\\userAttribute('id'),\n                'teamsIds', env\\userAttribute('teamsIds'),\n                'bunchId', $bunchId\n            );\n            \n            //summary for bunch\n            $ticketsIds = array\\push($ticketsIds, $ticketId);\n            $totalPrice = $totalPrice + $price;\n            formatedPlaces = string\\concatenate(formatedPlaces, $place, '\\n');\n            \n            $i = $i + 1;\n        )\n    );\n    //------------------------------------------------------------\n    \n    //--------------send screenshot upload link-------------------\n    $emailId = record\\create(\n        'Email',\n        'to', email,\n        'status', 'Draft',\n        'parentId', $ticketId, //any ticket from bunch\n        'parentType', 'Ticket' //use bunchId as linked to bunch\n    );\n    ext\\email\\applyTemplate($emailId, $emailTemplateId);\n    ext\\email\\send($emailId);\n    //------------------------------------------------------------\n    \n    // ----------------------------fields-------------------------\n    name = string\\concatenate(firstName, ' ', lastName);\n    contactId = $clientId;\n    assignedUserId = env\\userAttribute('id');\n    teamsIds = env\\userAttribute('teamsIds');\n    entity\\addLinkMultipleId('tickets', $ticketsIds);\n    bunchId = $bunchId;\n    bookedStart = $bookedStart;\n    bookedEnd = $bookedEnd;\n    price = $totalPrice;\n    //------------------------------------------------------------\n}\n\n//before update\nif (!entity\\isNew()) {\n    if (entity\\isAttributeChanged('screenshotId')) {\n        $relatedTickets = record\\findMany('Ticket', 10, 'createdAt', 'desc', 'bunchId=', bunchId);\n        $i = 0;\n        while($i < array\\length($relatedTickets),\n            (\n                $relatedTicketId = array\\at($relatedTickets, $i);\n                record\\update('Ticket', $relatedTicketId, 'screenshotId', screenshotId);\n                $i = $i + 1;\n            )\n        );\n    }\n}",
    "beforeSaveCustomScript": "$emailTemplateId = '661e4abcb188bee49';\n\n//on update\nif (!entity\\isNew()) {\n    if (entity\\isAttributeChanged('status')) {\n        if (status == 'paid') {\n            salesDate = datetime\\today();\n            if (screenshotId != null) {\n                paymentMethod = 'iban';\n            }\n        }\n        \n        //update related tickets\n        $relatedTickets = record\\findMany('Ticket', 10, 'createdAt', 'desc', 'bunchId=', bunchId);\n        $i = 0;\n        while($i < array\\length($relatedTickets),\n            (\n                $relatedTicketId = array\\at($relatedTickets, $i);\n                record\\update('Ticket', $relatedTicketId, \n                    'salesDate', salesDate, \n                    'paymentMethod', paymentMethod,\n                    'status', status\n                );\n                $i = $i + 1;\n            )\n        );\n    }\n}\n\n\n//send tickets if status paid\nif (status == 'paid' && !isTicketsSend) {\n    $emailId = record\\create(\n        'Email',\n        'to', email,\n        'status', 'Draft',\n        'parentId', id,\n        'parentType', 'TicketsBunch'\n    );\n    ext\\email\\applyTemplate($emailId, $emailTemplateId);\n    ext\\email\\send($emailId);\n    \n    isTicketsSend = true;\n}\n\n//send email button triggers this part\nif (!entity\\isNew() && entity\\isAttributeChanged('sendEmailTrigger')) {\n    $emailId = record\\create(\n        'Email',\n        'to', email,\n        'status', 'Draft',\n        'parentId', id,\n        'parentType', 'TicketsBunch'\n    );\n    ext\\email\\applyTemplate($emailId, $emailTemplateId);\n    ext\\email\\send($emailId);\n    \n    isTicketsSend = true;\n}\n"
}